# version: '3.8'

# services:
#   # PostgreSQL for the claim-service and Keycloak
#   postgres:
#     image: postgres:latest  
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     networks:
#       - e-claim-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost -p 5432"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   # MongoDB for claim-service or other services
#   mongo:
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     networks:
#       - e-claim-network

#   # Claim Service (API) connected to PostgreSQL
#   claim-service:
#     build: ./services/claim-service/ClaimService
#     ports:
#       - "5016:8080"
#     depends_on:
#       - postgres
#     networks:
#       - e-claim-network

#   # PostgreSQL for Kong
#   kong-database:
#     image: postgres:latest  
#     environment:
#       POSTGRES_USER: ${KONG_PG_USER}
#       POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
#       POSTGRES_DB: ${KONG_PG_DATABASE}
#     ports:
#       - "5433:5432"
#     networks:
#       - e-claim-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${KONG_PG_USER} -d ${KONG_PG_DATABASE} -h localhost -p 5432"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   # Kong API Gateway connected to Kong-database
#   kong:
#     image: kong:latest
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_HOST: kong-database
#       KONG_PG_USER: ${KONG_PG_USER}
#       KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
#       KONG_PG_DATABASE: ${KONG_PG_DATABASE}
#       KONG_PROXY_ACCESS_LOG: /dev/stdout
#       KONG_ADMIN_ACCESS_LOG: /dev/stdout
#       KONG_PROXY_ERROR_LOG: /dev/stderr
#       KONG_ADMIN_ERROR_LOG: /dev/stderr
#       KONG_ADMIN_LISTEN: 0.0.0.0:8001
#     ports:
#       - "8000:8000"
#       - "8001:8001"
#     depends_on:
#       - kong-database
#     networks:
#       - e-claim-network
#     entrypoint: >
#       /bin/sh -c "
#       until pg_isready -h kong-database -U ${KONG_PG_USER}; do
#         echo 'Waiting for database to be ready...';
#         sleep 5;
#       done;
#       kong migrations bootstrap && kong start
#       "

#   # PostgreSQL for Konga
#   konga-database:
#     image: postgres:latest  
#     environment:
#       POSTGRES_USER: konga
#       POSTGRES_PASSWORD: konga_password
#       POSTGRES_DB: konga_db
#     ports:
#       - "5434:5432"
#     networks:
#       - e-claim-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U konga -d konga_db -h localhost -p 5432"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   # Konga (Kong GUI)
#   konga:
#     image: pantsel/konga:latest
#     ports:
#       - "1337:1337"
#     environment:
#       NODE_ENV: "production"
#       DB_ADAPTER: "postgres"
#       DB_HOST: konga-database
#       DB_PORT: 5432
#       DB_USER: "konga"
#       DB_PASSWORD: "konga_password"
#       DB_DATABASE: "konga_db"
#       DB_POOLSIZE: 5
#       DB_SSL: "false"  # Add this if SSL isn't being used
#       DB_SCHEMA: "public"  # Explicitly set the schema
#     depends_on:
#       - konga-database
#     networks:
#       - e-claim-network

#   # Keycloak Authentication Server
#   keycloak:
#     image: quay.io/keycloak/keycloak:latest
#     environment:
#       DB_VENDOR: POSTGRES
#       DB_ADDR: postgres
#       DB_DATABASE: keycloak
#       DB_USER: ${POSTGRES_USER}
#       DB_PASSWORD: ${POSTGRES_PASSWORD}
#       KEYCLOAK_ADMIN: admin
#       KEYCLOAK_ADMIN_PASSWORD: admin
#     ports:
#       - "9090:8080"
#     command: ["start-dev"]
#     depends_on:
#       - postgres
#     networks:
#       - e-claim-network

# networks:
#   e-claim-network:
#     driver: bridge

# volumes:
#   postgres-data:
#   mongo-data:

version: '3.8'

services:
  postgres:
    image: postgres:latest  # Using the latest PostgreSQL version
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - e-claim-network

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - e-claim-network

  claim-service:
    build: ./services/claim-service/ClaimService
    ports:
      - "5016:8080"
    depends_on:
      - postgres
    networks:
      - e-claim-network

  kong-database:
    image: postgres:latest  # Using the latest PostgreSQL version for Kong
    environment:
      POSTGRES_USER: ${KONG_PG_USER}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
      POSTGRES_DB: ${KONG_PG_DATABASE}
    ports:
      - "5433:5432"
    networks:
      - e-claim-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KONG_PG_USER} -d ${KONG_PG_DATABASE} -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - kong-database
    networks:
      - e-claim-network
    entrypoint: >
      /bin/sh -c "
      until nc -z kong-database 5432; do
        echo 'Waiting for database to be ready...';
        sleep 5;
      done;
      kong migrations bootstrap;
      kong start
      "

      
  konga:
    image: pantsel/konga:latest
    ports:
      - "1337:1337"  # Konga UI port
    environment:
      NODE_ENV: "production"
    networks:
      - e-claim-network
    depends_on:
      - kong

networks:
  e-claim-network:
    driver: bridge

volumes:
  postgres-data:
  mongo-data:

# version: '3.8'

# services:
#   postgres:
#     image: postgres:latest  # PostgreSQL for the claim-service and Keycloak
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     networks:
#       - e-claim-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost -p 5432"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   mongo:
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     networks:
#       - e-claim-network

#   claim-service:
#     build: ./services/claim-service/ClaimService
#     ports:
#       - "5016:8080"
#     depends_on:
#       - postgres
#     networks:
#       - e-claim-network

#   kong-database:
#     image: postgres:latest  # PostgreSQL for Kong
#     environment:
#       POSTGRES_USER: ${KONG_PG_USER}
#       POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
#       POSTGRES_DB: ${KONG_PG_DATABASE}
#     ports:
#       - "5433:5432"
#     networks:
#       - e-claim-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${KONG_PG_USER} -d ${KONG_PG_DATABASE} -h localhost -p 5432"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   kong:
#     image: kong:latest
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_HOST: kong-database
#       KONG_PG_USER: ${KONG_PG_USER}
#       KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
#       KONG_PG_DATABASE: ${KONG_PG_DATABASE}
#       KONG_PROXY_ACCESS_LOG: /dev/stdout
#       KONG_ADMIN_ACCESS_LOG: /dev/stdout
#       KONG_PROXY_ERROR_LOG: /dev/stderr
#       KONG_ADMIN_ERROR_LOG: /dev/stderr
#       KONG_ADMIN_LISTEN: 0.0.0.0:8001
#     ports:
#       - "8000:8000"   # Kong API Gateway
#       - "8001:8001"   # Kong Admin API
#     depends_on:
#       - kong-database
#     networks:
#       - e-claim-network
#     entrypoint: >
#       /bin/sh -c "
#       until pg_isready -h kong-database -U ${KONG_PG_USER}; do
#         echo 'Waiting for database to be ready...';
#         sleep 5;
#       done;
#       kong migrations bootstrap;
#       kong start
#       "

#   konga:
#     image: pantsel/konga:latest
#     ports:
#       - "1337:1337"  # Konga UI port
#     environment:
#       NODE_ENV: "production"
#     networks:
#       - e-claim-network
#     depends_on:
#       - kong

#   keycloak:
#     image: quay.io/keycloak/keycloak:latest
#     environment:
#       DB_VENDOR: POSTGRES
#       DB_ADDR: postgres
#       DB_DATABASE: keycloak
#       DB_USER: ${POSTGRES_USER}
#       DB_PASSWORD: ${POSTGRES_PASSWORD}
#       KEYCLOAK_ADMIN: admin
#       KEYCLOAK_ADMIN_PASSWORD: admin
#     ports:
#       - "9090:8080"  # Expose internal port 8080 of Keycloak to 9090 on host machine
#     command: ["start-dev"]  # Recommended for Keycloak 17+
#     depends_on:
#       - postgres
#     networks:
#       - e-claim-network

# networks:
#   e-claim-network:
#     driver: bridge

# volumes:
#   postgres-data:
#   mongo-data:


